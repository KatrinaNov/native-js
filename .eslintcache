[{"D:\\incubator\\native-js\\src\\index.tsx":"1","D:\\incubator\\native-js\\src\\components\\CurrencyExchange\\CurrencyExchange.tsx":"2","D:\\incubator\\native-js\\src\\redux\\actions.ts":"3","D:\\incubator\\native-js\\src\\containers\\CurrencyExchangeContainer\\CurrencyEContainer.tsx":"4","D:\\incubator\\native-js\\src\\redux\\currencyReducer.ts":"5","D:\\incubator\\native-js\\src\\redux\\selectors.ts":"6","D:\\incubator\\native-js\\src\\lessons\\lesson2\\lesson2.ts":"7"},{"size":319,"mtime":1609752860853,"results":"8","hashOfConfig":"9"},{"size":3871,"mtime":1609757735301,"results":"10","hashOfConfig":"9"},{"size":1827,"mtime":1642060236696,"results":"11","hashOfConfig":"9"},{"size":5263,"mtime":1642062195578,"results":"12","hashOfConfig":"9"},{"size":1330,"mtime":1642059035672,"results":"13","hashOfConfig":"9"},{"size":110,"mtime":1642062063654,"results":"14","hashOfConfig":"9"},{"size":8340,"mtime":1642527992744,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"15qofoo",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\incubator\\native-js\\src\\index.tsx",[],["32","33"],"D:\\incubator\\native-js\\src\\components\\CurrencyExchange\\CurrencyExchange.tsx",[],"D:\\incubator\\native-js\\src\\redux\\actions.ts",[],"D:\\incubator\\native-js\\src\\containers\\CurrencyExchangeContainer\\CurrencyEContainer.tsx",["34","35","36","37"],"import React from 'react';\r\nimport CurrencyExchange from '../../components/CurrencyExchange/CurrencyExchange';\r\nimport {CurrencyState, CurrencyType} from '../../redux/currencyReducer';\r\nimport {Dispatch} from 'redux';\r\nimport {\r\n  ChangeActionAC,\r\n  ChangeCurrencyFieldAC,\r\n  СhangeCurrentCurrencyAC,\r\n  CurrencyReducersTypes\r\n} from '../../redux/actions';\r\nimport {connect, ConnectedProps, useDispatch, useSelector} from 'react-redux';\r\nimport {IGlobalState} from \"../../redux/state\";\r\nimport {selectAllProps} from \"../../redux/selectors\";\r\n\r\nconst CurrencyEContainer: React.FC = () => {\r\n\r\n  // const {\r\n  //     currencies,\r\n  //     currentCurrency,\r\n  //     isBuying,\r\n  //     amountOfBYN,\r\n  //     amountOfCurrency,\r\n  //     setCurrencyAmount,\r\n  //     setAction,\r\n  //     changeCurrency,\r\n  // } = props;\r\n\r\n  // сокращенная версия mapDispatchToProps\r\n  // const {\r\n  //     currencies,\r\n  //     currentCurrency,\r\n  //     isBuying,\r\n  //     amountOfBYN,\r\n  //     amountOfCurrency,\r\n  // } = props;\r\n\r\n  // useSelector\r\n  const {\r\n    currencies,\r\n    currentCurrency,\r\n    isBuying,\r\n    amountOfBYN,\r\n    amountOfCurrency,\r\n  } = useSelector(selectAllProps);\r\n\r\n  const dispatch = useDispatch<Dispatch<CurrencyReducersTypes>>();\r\n\r\n  let currencyRate: number = 0;\r\n  const currenciesName = currencies.map((currency: CurrencyType) => {\r\n    if (currency.currencyName === currentCurrency) {\r\n      currencyRate = isBuying ? currency.buyRate : currency.sellRate;\r\n    }\r\n    return currency.currencyName;\r\n  });\r\n\r\n  const changeCurrencyField = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    let value = e.currentTarget.value;\r\n    if (!isFinite(+value)) return;\r\n    if (e.currentTarget.dataset.currency) {\r\n      const trigger: string = e.currentTarget.dataset.currency;\r\n      if (trigger === 'byn') {\r\n        if (value === '') {\r\n          // setCurrencyAmount(value, value);\r\n          // ChangeCurrencyFieldAC(value, value);\r\n          dispatch(ChangeCurrencyFieldAC(value, value));\r\n        } else {\r\n          // setCurrencyAmount(value, (+Number(value).toFixed(2) / currencyRate).toFixed(2));\r\n          // ChangeCurrencyFieldAC(value, (+Number(value).toFixed(2) / currencyRate).toFixed(2));\r\n          dispatch(ChangeCurrencyFieldAC(value, (+Number(value).toFixed(2) / currencyRate).toFixed(2)));\r\n        }\r\n      } else {\r\n        if (value === '') {\r\n          // setCurrencyAmount(value, value);\r\n          // ChangeCurrencyFieldAC(value, value);\r\n          dispatch(ChangeCurrencyFieldAC(value, value));\r\n        } else {\r\n          // setCurrencyAmount((+Number(value).toFixed(2) * currencyRate).toFixed(2), value);\r\n          // ChangeCurrencyFieldAC((+Number(value).toFixed(2) * currencyRate).toFixed(2), value);\r\n          dispatch(ChangeCurrencyFieldAC((+Number(value).toFixed(2) * currencyRate).toFixed(2), value));\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const changeAction = (e: React.MouseEvent<HTMLSpanElement>) => {\r\n    // e.currentTarget.dataset.action === 'buy' ? setAction(true) : setAction(false);\r\n    e.currentTarget.dataset.action === 'buy' ? dispatch(ChangeActionAC(true)) : dispatch(ChangeActionAC(false));\r\n  };\r\n\r\n  const changeCurrentCurrency = (e: React.MouseEvent<HTMLLIElement>) => {\r\n    // e.currentTarget.dataset.currency && changeCurrency(e.currentTarget.dataset.currency);\r\n    e.currentTarget.dataset.currency && dispatch(СhangeCurrentCurrencyAC(e.currentTarget.dataset.currency));\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CurrencyExchange\r\n        currenciesName={currenciesName}\r\n        currentCurrency={currentCurrency}\r\n        currencyRate={currencyRate}\r\n        isBuying={isBuying}\r\n        amountOfBYN={amountOfBYN}\r\n        amountOfCurrency={amountOfCurrency}\r\n        changeCurrencyField={changeCurrencyField}\r\n        changeAction={changeAction}\r\n        changeCurrentCurrency={changeCurrentCurrency}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\n// const mapStateToProps = ( { currency } : {currency: CurrencyState} ): CurrencyState => {\r\n//     return {\r\n//         currencies: currency.currencies,\r\n//         currentCurrency: currency.currentCurrency,\r\n//         isBuying: currency.isBuying,\r\n//         amountOfBYN: currency.amountOfBYN,\r\n//         amountOfCurrency: currency.amountOfCurrency,\r\n//     };\r\n// };\r\n\r\n// const mapDispatchToProps = (dispatch: Dispatch<CurrencyReducersTypes>) => {\r\n//     return {\r\n//         setCurrencyAmount(amountOfBYN: string, amountOfCurrency: string) {\r\n//             dispatch(ChangeCurrencyFieldAC(amountOfBYN, amountOfCurrency));\r\n//         },\r\n//         setAction(isBuying: boolean) {\r\n//             dispatch(ChangeActionAC(isBuying));\r\n//         },\r\n//         changeCurrency(currency: string) {\r\n//             dispatch(СhangeCurrentCurrencyAC(currency));\r\n//         },\r\n//     };\r\n// };\r\n\r\n// const connector = connect(mapStateToProps, mapDispatchToProps);\r\n// const connector = connect(mapStateToProps, {\r\n//     ChangeActionAC,\r\n//     ChangeCurrencyFieldAC,\r\n//     СhangeCurrentCurrencyAC,\r\n// });\r\n\r\n// const connector = connect(mapStateToProps, {});\r\n\r\n// type TProps = ConnectedProps<typeof connector>;\r\n\r\n// export default connector(CurrencyEContainer);\r\nexport default CurrencyEContainer;\r\n\r\n","D:\\incubator\\native-js\\src\\redux\\currencyReducer.ts",[],"D:\\incubator\\native-js\\src\\redux\\selectors.ts",[],"D:\\incubator\\native-js\\src\\lessons\\lesson2\\lesson2.ts",["38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54"],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":3,"column":9,"nodeType":"61","messageId":"62","endLine":3,"endColumn":22},{"ruleId":"59","severity":1,"message":"63","line":11,"column":9,"nodeType":"61","messageId":"62","endLine":11,"endColumn":16},{"ruleId":"59","severity":1,"message":"64","line":11,"column":18,"nodeType":"61","messageId":"62","endLine":11,"endColumn":32},{"ruleId":"59","severity":1,"message":"65","line":12,"column":9,"nodeType":"61","messageId":"62","endLine":12,"endColumn":21},{"ruleId":"59","severity":1,"message":"66","line":33,"column":5,"nodeType":"61","messageId":"62","endLine":33,"endColumn":13},{"ruleId":"59","severity":1,"message":"67","line":34,"column":5,"nodeType":"61","messageId":"62","endLine":34,"endColumn":14},{"ruleId":"59","severity":1,"message":"68","line":57,"column":5,"nodeType":"61","messageId":"62","endLine":57,"endColumn":17},{"ruleId":"59","severity":1,"message":"69","line":64,"column":5,"nodeType":"61","messageId":"62","endLine":64,"endColumn":8},{"ruleId":"59","severity":1,"message":"70","line":66,"column":10,"nodeType":"61","messageId":"62","endLine":66,"endColumn":19},{"ruleId":"59","severity":1,"message":"71","line":70,"column":10,"nodeType":"61","messageId":"62","endLine":70,"endColumn":17},{"ruleId":"59","severity":1,"message":"72","line":118,"column":10,"nodeType":"61","messageId":"62","endLine":118,"endColumn":13},{"ruleId":"59","severity":1,"message":"73","line":138,"column":7,"nodeType":"61","messageId":"62","endLine":138,"endColumn":14},{"ruleId":"59","severity":1,"message":"74","line":171,"column":7,"nodeType":"61","messageId":"62","endLine":171,"endColumn":15},{"ruleId":"59","severity":1,"message":"75","line":252,"column":21,"nodeType":"61","messageId":"62","endLine":252,"endColumn":24},{"ruleId":"59","severity":1,"message":"76","line":258,"column":10,"nodeType":"61","messageId":"62","endLine":258,"endColumn":17},{"ruleId":"59","severity":1,"message":"77","line":273,"column":5,"nodeType":"61","messageId":"62","endLine":273,"endColumn":9},{"ruleId":"59","severity":1,"message":"78","line":286,"column":10,"nodeType":"61","messageId":"62","endLine":286,"endColumn":23},{"ruleId":"59","severity":1,"message":"79","line":298,"column":5,"nodeType":"61","messageId":"62","endLine":298,"endColumn":14},{"ruleId":"59","severity":1,"message":"80","line":303,"column":10,"nodeType":"61","messageId":"62","endLine":303,"endColumn":30},{"ruleId":"59","severity":1,"message":"81","line":319,"column":5,"nodeType":"61","messageId":"62","endLine":319,"endColumn":21},{"ruleId":"82","severity":1,"message":"83","line":338,"column":1,"nodeType":"84","endLine":339,"endColumn":3},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"@typescript-eslint/no-unused-vars","'CurrencyState' is defined but never used.","Identifier","unusedVar","'connect' is defined but never used.","'ConnectedProps' is defined but never used.","'IGlobalState' is defined but never used.","'counterС' is assigned a value but never used.","'counter2С' is assigned a value but never used.","'counterConst' is assigned a value but never used.","'arr' is assigned a value but never used.","'inBetween' is defined but never used.","'inArray' is defined but never used.","'sum' is defined but never used.","'counter' is assigned a value but never used.","'counter3' is assigned a value but never used.","'fib' is defined but never used.","'fibFast' is defined but never used.","'list' is assigned a value but never used.","'printListLoop' is defined but never used.","'printList' is defined but never used.","'reversePrintListLoop' is defined but never used.","'reversePrintList' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]